import math
import os
import random
import re
import sys
def unboundedKnapsack(k, arr):
    temp = [0] * (k + 1)
    for x in arr:
        for y in range(x, k + 1):
            temp[y] = max(temp[y], temp[y - x] + x)
    return temp[k]
if __name__ == '__main__':
    F = open(os.environ['OUTPUT_PATH'], 'w')
    t = int(input().strip())
    for _ in range(t):
        first_multiple_input = input().rstrip().split()
        n = int(first_multiple_input[0])
        k = int(first_multiple_input[1])
        arr = list(map(int, input().rstrip().split()))
        result = unboundedKnapsack(k, arr)
        F.write(str(result) + '\n')
    F.close()
